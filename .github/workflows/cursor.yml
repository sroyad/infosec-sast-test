name: "AI Triage & Summary Existing Code Scanning Alerts (Cursor)"

on:
  workflow_dispatch:
  schedule:
    - cron: "17 3 * * 1" # Mondays 03:17 UTC

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  ai-triage-cursor:
    runs-on: ubuntu-latest
    env:
      OWNER: ${{ github.repository_owner }}
      REPO: ${{ github.event.repository.name }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Cursor Configuration
      CURSOR_API_KEY: ${{ secrets.CURSOR_API_KEY }}   # set this in repo/org secrets
      CURSOR_MODEL: "auto"                            # allowed: auto, sonnet-4.5, sonnet-4.5-thinking, gpt-5, gpt-5-codex, opus-4.1, grok
      CURSOR_RULES: ".github/tools/cursor-rules.md"

      # Triage Configuration
      ALERT_STATE: "open"
      MAX_ALERTS: "300"
      AUTO_DISMISS: "false"
      DISMISS_REASON: "false positive"
      SAFE_PATH_HINTS: "test,__tests__,spec,dist,build,node_modules,vendor,generated,coverage,min.js"

    steps:
      - name: Checkout (for code context)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install system dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ripgrep universal-ctags jq
          python3 -m pip install --upgrade pip
          python3 -m pip install requests pexpect

      - name: Setup Node 20 (for Cursor dependencies)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Cursor Agent CLI
        run: |
          set -euo pipefail
          curl -fsS https://cursor.com/install | bash
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          echo "$HOME/.cursor/bin" >> $GITHUB_PATH
          which cursor-agent || { echo "cursor-agent not found on PATH"; exit 1; }
          cursor-agent -v || true

      - name: Validate Cursor authentication
        env:
          CURSOR_API_KEY: ${{ secrets.CURSOR_API_KEY }}
          CURSOR_MODEL: ${{ env.CURSOR_MODEL }}
        shell: bash
        run: |
          test -n "$CURSOR_API_KEY" || { echo "CURSOR_API_KEY not set"; exit 1; }
          cursor-agent --print --model "$CURSOR_MODEL" --output-format text "ping" >/dev/null
          echo "‚úÖ Cursor auth & CLI validated"

      - name: Ensure rules file exists
        run: |
          test -f "$CURSOR_RULES" || { echo "‚ùå Missing $CURSOR_RULES"; exit 1; }
          echo "‚úÖ Using Cursor Rules at $CURSOR_RULES"

      - name: Make triage script executable
        run: chmod +x .github/tools/cursor_triage.py

      - name: Run AI triage with Cursor
        id: triage
        env:
          CURSOR_API_KEY: ${{ secrets.CURSOR_API_KEY }}
          CURSOR_MODEL: ${{ env.CURSOR_MODEL }}
          CURSOR_RULES: ${{ env.CURSOR_RULES }}
        shell: bash
        run: |
          echo "ü§ñ Starting AI-powered security triage..."
          python3 .github/tools/cursor_triage.py

      - name: Upload triage results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cursor-ai-triage-results
          path: cursor-ai-triage.json
          if-no-files-found: error
          retention-days: 30

      - name: Summary
        if: always()
        run: |
          echo "‚úÖ AI Triage workflow completed"
          echo "üìä Check the Job Summary tab for detailed results"
          echo "üìÅ Download cursor-ai-triage-results artifact for full data"
